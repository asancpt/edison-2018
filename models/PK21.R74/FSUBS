      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::Ka,CLss,CLpre,RKD,V,ALAG1,S2,TBP
      REAL(KIND=DPSIZE), POINTER ::TBP2,RKPRE,RKSS,K1,K2,AS,K3,Ke,Y
      REAL(KIND=DPSIZE), POINTER ::E000007,F000112,F000113,F000114
      REAL(KIND=DPSIZE), POINTER ::F000115,F000151,F000152,F000153
      REAL(KIND=DPSIZE), POINTER ::F000154,E000020,F000192,F000193
      REAL(KIND=DPSIZE), POINTER ::F000194,F000196,E000081,F000387
      REAL(KIND=DPSIZE), POINTER ::E000083,E000085,E000084,F000389
      REAL(KIND=DPSIZE), POINTER ::F000390,F000392,F000391,F000388
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      Ka=>COM(000001);CLss=>COM(000002);CLpre=>COM(000003)
      RKD=>COM(000004);V=>COM(000005);ALAG1=>COM(000006)
      S2=>COM(000007);TBP=>COM(000008);TBP2=>COM(000009)
      RKPRE=>COM(000010);RKSS=>COM(000011);K1=>COM(000012)
      K2=>COM(000013);AS=>COM(000014);K3=>COM(000015);Ke=>COM(000016)
      Y=>COM(000017);E000007=>COM(000018);F000112=>COM(000019)
      F000113=>COM(000020);F000114=>COM(000021);F000115=>COM(000022)
      F000151=>COM(000023);F000152=>COM(000024);F000153=>COM(000025)
      F000154=>COM(000026);E000020=>COM(000027);F000192=>COM(000028)
      F000193=>COM(000029);F000194=>COM(000030);F000196=>COM(000031)
      E000081=>COM(000032);F000387=>COM(000033);E000083=>COM(000034)
      E000085=>COM(000035);E000084=>COM(000036);F000389=>COM(000037)
      F000390=>COM(000038);F000392=>COM(000039);F000391=>COM(000040)
      F000388=>COM(000041)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE MODEL (IDNO,NCM,NPAR,IR,IATT,LINK)                           
      USE PRMOD_CHAR, ONLY: NAME                                              
      USE SIZES,     ONLY: DPSIZE,ISIZE,SD
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      INTEGER(KIND=ISIZE) :: IDNO,NCM,NPAR,IR,IATT,LINK,I,J                   
      DIMENSION :: IATT(IR,*),LINK(IR,*)                                      
      SAVE
      INTEGER(KIND=ISIZE), DIMENSION (2,7) :: MOD
      CHARACTER(LEN=SD), DIMENSION(2) :: CMOD
      DATA (MOD(I,  1),I=  1,  2)/&
      1,1 /
      DATA (MOD(I,  2),I=  1,  2)/&
      1,1 /
      DATA (MOD(I,  3),I=  1,  2)/&
      1,1 /
      DATA (MOD(I,  4),I=  1,  2)/&
      0,1 /
      DATA (MOD(I,  5),I=  1,  2)/&
      1,0 /
      DATA (MOD(I,  6),I=  1,  2)/&
      0,0 /
      DATA (MOD(I,  7),I=  1,  2)/&
      0,0 /
      DATA (CMOD(I),I=  1,  2) &
      /'DEPOT','CENTRAL'/
      FORALL (I=1:2) NAME(I)=CMOD(I)
      FORALL (I=1:2,J=1:7) IATT(I,J)=MOD(I,J)
      IDNO=9999                                                               
      NCM=  2
      NPAR=005
      RETURN
      END
      SUBROUTINE PK(ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,IRGG,GG,NETAS)      
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE PRDATA, ONLY: MXSTEP=>MXSTP01
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L
      USE NMPRD_INT, ONLY: IQUIT
      USE NMBAYES_REAL, ONLY: LDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                          
      REAL(KIND=DPSIZE) :: EVTREC                                               
      SAVE
      INTEGER(KIND=ISIZE) :: FIRSTEM
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS              
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*) 
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                      
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   7
      IDEF(   7,0001)=   6
      RETURN                                                                    
      ENDIF                                                                     
 !  level            0
      Ka=THETA(001) 
      CLss=THETA(002) 
      CLpre=THETA(003) 
      RKD=THETA(004) 
      V=THETA(005) 
      ALAG1=THETA(006) 
      S2=V/3796.94D0 
      P000001=CLpre 
      P000002=V 
      P000003=CLss 
      P000004=RKD 
      P000005=Ka 
      IF (FIRSTEM == 1) THEN
      GG(0001,1,1)=P000001
      GG(0002,1,1)=P000002
      GG(0003,1,1)=P000003
      GG(0004,1,1)=P000004
      GG(0005,1,1)=P000005
      GG(0006,1,1)=ALAG1
      GG(0007,1,1)=S2
      ELSE
      GG(0001,1,1)=P000001
      GG(0002,1,1)=P000002
      GG(0003,1,1)=P000003
      GG(0004,1,1)=P000004
      GG(0005,1,1)=P000005
      GG(0006,1,1)=ALAG1
      GG(0007,1,1)=S2
      ENDIF
      RETURN
      END
      SUBROUTINE ERROR (ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,F,G,HH)       
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IQUIT,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: EVTREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS                       
      DIMENSION :: IDEF(*),THETA(*),EVTREC(IREV,*),INDXS(*)                   
      REAL(KIND=DPSIZE) :: G(GERD,*),HH(HERD,*)                               
      INTEGER(KIND=ISIZE) :: FIRSTEM
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                    
      CALL ASSOCNMPRD4
      IDEF(2)=2
      HH(1,1)=1.0D0
      IDEF(3)=000
      RETURN
      ENDIF
      IF (ICALL == 4) THEN
      IF (NEWIND <= 1) THEN
      CALL SIMETA(ETA)
      IF (IQUIT == 1) RETURN
      ENDIF
      ENDIF
 !  level            0
      Y=F+ETA(001) 
      IF (FIRSTEM == 1) THEN !1
      ENDIF !1
      F=Y
      RETURN
      END
      SUBROUTINE TOL(NRD,ANRD,NRDC,ANRDC)
      USE SIZES,     ONLY: ISIZE
      INTEGER(KIND=ISIZE) :: NRD(0:*), ANRD(0:*), NRDC(0:*), ANRDC(0:*)
      NRD(1)=6 
      RETURN
      END
      SUBROUTINE DES (A,P,T,DADT,IR,DA,DP,DT)                                 
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: IERPRD,NETEXT,IQUIT                                
      USE NMPRD_CHAR,ONLY: ETEXT                                              
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IFIRSTEM,IFIRSTEMJAC
      USE PRCOM_INT, ONLY: MITER
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L
      USE PRMOD_INT, ONLY: ICALL=>ICALLD,IDEFD,IDEFA
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      SAVE
      INTEGER(KIND=ISIZE) :: IR                                               
      DIMENSION :: A(*),P(*),DADT(*),DA(IR,*),DP(IR,*),DT(*)                  
      INTEGER(KIND=ISIZE) :: FIRSTEM,IFIRSTEMJACIN
      IF(MITER==1.OR.MITER==4) IFIRSTEM=1
      FIRSTEM=IFIRSTEM
      IFIRSTEMJACIN=IFIRSTEMJAC
      IF(NOFIRSTDERCODE/=1) THEN
      IFIRSTEMJAC=FIRSTEM
      ELSE
      IFIRSTEMJAC=0
      ENDIF
      IF(IFIRSTEMJACIN==-2) RETURN
      IF (ICALL == 1) THEN
      CALL ASSOCNMPRD4
      IDEFD(1)=  0
      IDEFD(2)=0
      DA(   1,1)=0000014280
      DA(   2,1)=0000028441
      DA(   3,1)=0000028560
      DA(   4,1)=0000000000
      DP(   1,1)=0000014756
      DP(   2,1)=0000028441
      DP(   3,1)=0000028560
      DP(   4,1)=0000028679
      DP(   5,1)=0000028798
      DP(   6,1)=0000028917
      DP(   7,1)=0000000000
      DT(   1)=0000028322
      DT(   2)=0000028324
      DT(   3)=0000028433
      DT(   4)=0000000000
      RETURN
      ENDIF
 !  level            0
 !  level            0
      TBP=216.D0 
      TBP2=512.D0 
      RKPRE=P(001)/P(002) 
      RKSS=P(003)/P(002) 
      K1=RKPRE 
      B000013=T-TBP 
      B000014=RKSS-RKPRE 
      B000015=-P(004)*B000013 
      B000016=DEXP(B000015) 
      K2=RKSS-B000014*B000016 
      B000017=TBP2-TBP 
      B000018=RKSS-RKPRE 
      B000019=-P(004)*B000017 
      B000020=DEXP(B000019) 
      AS=RKSS-B000018*B000020 
      B000021=T-TBP2 
      B000022=RKPRE-AS 
      B000023=-P(004)*B000021 
      B000024=DEXP(B000023) 
      K3=RKPRE-B000022*B000024 
      Ke=K1 
      Q000000=0.D0 
      Q000001=1.D0 
      IF(T >= TBP.AND.T <  TBP2)THEN 
      Q000000=1.D0 
      Q000001=0.D0 
      ENDIF 
      B000030=Q000000*K2+Q000001*Ke 
      Ke=B000030 
      Q000002=0.D0 
      Q000003=1.D0 
      IF(T >= TBP2)THEN 
      Q000002=1.D0 
      Q000003=0.D0 
      ENDIF 
      B000034=Q000002*K3+Q000003*B000030 
      Ke=B000034 
      DADT(1)=-P(005)*A(1) 
      DADT(2)=P(005)*A(1)-Ke*A(2) 
      B000035=Ke 
      IF (FIRSTEM == 1) THEN ! 1
      B000001=1.D0/P(002) 
      B000002=-P(001)/P(002)/P(002) 
      B000007=1.D0/P(002) 
      B000008=-P(003)/P(002)/P(002) 
!                      E000005 = DERIVATIVE OF B000015 W.R.T. T
      E000005=-P(004) 
!                      E000006 = DERIVATIVE OF B000016 W.R.T. T
      E000006=B000016*E000005 
!                      E000007 = DERIVATIVE OF K2 W.R.T. T
      E000007=-B000014*E000006 
!                      F000106 = DERIVATIVE OF B000014 W.R.T. P(002)
      F000106=-B000002+B000008 
!                      F000107 = DERIVATIVE OF B000014 W.R.T. P(001)
      F000107=-B000001 
!                      F000108 = DERIVATIVE OF B000015 W.R.T. P(004)
      F000108=-B000013 
!                      F000109 = DERIVATIVE OF B000016 W.R.T. P(004)
      F000109=B000016*F000108 
!                      F000112 = DERIVATIVE OF K2 W.R.T. P(001)
      F000112=-B000016*F000107 
!                      F000113 = DERIVATIVE OF K2 W.R.T. P(002)
      F000113=-B000016*F000106+B000008 
!                      F000114 = DERIVATIVE OF K2 W.R.T. P(003)
      F000114=-B000016*B000007+B000007 
!                      F000115 = DERIVATIVE OF K2 W.R.T. P(004)
      F000115=-B000014*F000109 
!                      F000145 = DERIVATIVE OF B000018 W.R.T. P(002)
      F000145=-B000002+B000008 
!                      F000146 = DERIVATIVE OF B000018 W.R.T. P(001)
      F000146=-B000001 
!                      F000147 = DERIVATIVE OF B000019 W.R.T. P(004)
      F000147=-B000017 
!                      F000148 = DERIVATIVE OF B000020 W.R.T. P(004)
      F000148=B000020*F000147 
!                      F000151 = DERIVATIVE OF AS W.R.T. P(001)
      F000151=-B000020*F000146 
!                      F000152 = DERIVATIVE OF AS W.R.T. P(002)
      F000152=-B000020*F000145+B000008 
!                      F000153 = DERIVATIVE OF AS W.R.T. P(003)
      F000153=-B000020*B000007+B000007 
!                      F000154 = DERIVATIVE OF AS W.R.T. P(004)
      F000154=-B000018*F000148 
!                      E000018 = DERIVATIVE OF B000023 W.R.T. T
      E000018=-P(004) 
!                      E000019 = DERIVATIVE OF B000024 W.R.T. T
      E000019=B000024*E000018 
!                      E000020 = DERIVATIVE OF K3 W.R.T. T
      E000020=-B000022*E000019 
!                      F000184 = DERIVATIVE OF B000022 W.R.T. P(004)
      F000184=-F000154 
!                      F000185 = DERIVATIVE OF B000022 W.R.T. P(003)
      F000185=-F000153 
!                      F000186 = DERIVATIVE OF B000022 W.R.T. P(002)
      F000186=-F000152+B000002 
!                      F000187 = DERIVATIVE OF B000022 W.R.T. P(001)
      F000187=-F000151+B000001 
!                      F000188 = DERIVATIVE OF B000023 W.R.T. P(004)
      F000188=-B000021 
!                      F000189 = DERIVATIVE OF B000024 W.R.T. P(004)
      F000189=B000024*F000188 
!                      F000192 = DERIVATIVE OF K3 W.R.T. P(001)
      F000192=-B000024*F000187+B000001 
!                      F000193 = DERIVATIVE OF K3 W.R.T. P(002)
      F000193=-B000024*F000186+B000002 
!                      F000194 = DERIVATIVE OF K3 W.R.T. P(003)
      F000194=-B000024*F000185 
!                      F000195 = DERIVATIVE OF K3 W.R.T. P(004)
      F000195=-B000024*F000184 
!                      F000196 = DERIVATIVE OF K3 W.R.T. P(004)
      F000196=-B000022*F000189+F000195 
!                      E000038 = DERIVATIVE OF B000030 W.R.T. T
      E000038=Q000000*E000007 
!                      F000268 = DERIVATIVE OF B000030 W.R.T. P(001)
      F000268=Q000000*F000112 
!                      F000269 = DERIVATIVE OF B000030 W.R.T. P(002)
      F000269=Q000000*F000113 
!                      F000270 = DERIVATIVE OF B000030 W.R.T. P(003)
      F000270=Q000000*F000114 
!                      F000271 = DERIVATIVE OF B000030 W.R.T. P(004)
      F000271=Q000000*F000115 
!                      F000272 = DERIVATIVE OF B000030 W.R.T. P(002)
      F000272=Q000001*B000002+F000269 
!                      F000273 = DERIVATIVE OF B000030 W.R.T. P(001)
      F000273=Q000001*B000001+F000268 
!                      E000058 = DERIVATIVE OF B000034 W.R.T. T
      E000058=Q000002*E000020 
!                      E000059 = DERIVATIVE OF B000034 W.R.T. T
      E000059=Q000003*E000038+E000058 
!                      F000327 = DERIVATIVE OF B000034 W.R.T. P(001)
      F000327=Q000002*F000192 
!                      F000328 = DERIVATIVE OF B000034 W.R.T. P(002)
      F000328=Q000002*F000193 
!                      F000329 = DERIVATIVE OF B000034 W.R.T. P(003)
      F000329=Q000002*F000194 
!                      F000330 = DERIVATIVE OF B000034 W.R.T. P(004)
      F000330=Q000002*F000196 
!                      F000331 = DERIVATIVE OF B000034 W.R.T. P(001)
      F000331=Q000003*F000273+F000327 
!                      F000332 = DERIVATIVE OF B000034 W.R.T. P(002)
      F000332=Q000003*F000272+F000328 
!                      F000333 = DERIVATIVE OF B000034 W.R.T. P(004)
      F000333=Q000003*F000271+F000330 
!                      F000334 = DERIVATIVE OF B000034 W.R.T. P(003)
      F000334=Q000003*F000270+F000329 
!                      E000081 = DERIVATIVE OF DADT(1) W.R.T. A(001)
      E000081=-P(005) 
!                      F000387 = DERIVATIVE OF DADT(1) W.R.T. P(005)
      F000387=-A(1) 
!                      E000083 = DERIVATIVE OF DADT(2) W.R.T. A(001)
      E000083=P(005) 
!                      E000084 = DERIVATIVE OF DADT(2) W.R.T. T
      E000084=-A(2)*E000059 
!                      E000085 = DERIVATIVE OF DADT(2) W.R.T. A(002)
      E000085=-B000035 
!                      F000388 = DERIVATIVE OF DADT(2) W.R.T. P(005)
      F000388=A(1) 
!                      F000389 = DERIVATIVE OF DADT(2) W.R.T. P(001)
      F000389=-A(2)*F000331 
!                      F000390 = DERIVATIVE OF DADT(2) W.R.T. P(002)
      F000390=-A(2)*F000332 
!                      F000391 = DERIVATIVE OF DADT(2) W.R.T. P(004)
      F000391=-A(2)*F000333 
!                      F000392 = DERIVATIVE OF DADT(2) W.R.T. P(003)
      F000392=-A(2)*F000334 
      ENDIF !1
      IF (MSEC == 1) THEN 
!                      E000008 = DERIVATIVE OF E000006 W.R.T. T
      E000008=E000005*E000006 
!                      E000009 = DERIVATIVE OF E000007 W.R.T. T
      E000009=-B000014*E000008 
!                      E000021 = DERIVATIVE OF E000019 W.R.T. T
      E000021=E000018*E000019 
!                      E000022 = DERIVATIVE OF E000020 W.R.T. T
      E000022=-B000022*E000021 
      IF(T >= TBP.AND.T <  TBP2)THEN 
!                      E000033 = DERIVATIVE OF E000032 W.R.T. T
      E000033=E000009 
      ENDIF 
!                      E000039 = DERIVATIVE OF E000038 W.R.T. T
      E000039=Q000000*E000033 
!                      E000047 = DERIVATIVE OF E000046 W.R.T. T
      E000047=E000039 
      IF(T >= TBP2)THEN 
!                      E000053 = DERIVATIVE OF E000052 W.R.T. T
      E000053=E000022 
      ENDIF 
!                      E000060 = DERIVATIVE OF E000058 W.R.T. T
      E000060=Q000002*E000053 
!                      E000061 = DERIVATIVE OF E000059 W.R.T. T
      E000061=Q000003*E000039 
!                      E000062 = DERIVATIVE OF E000059 W.R.T. T
      E000062=E000060+E000061 
!                      E000076 = DERIVATIVE OF E000075 W.R.T. T
      E000076=E000062 
!                      E000087 = DERIVATIVE OF E000084 W.R.T. A(002)
      E000087=-E000059 
!                      E000088 = DERIVATIVE OF E000084 W.R.T. T
      E000088=-A(2)*E000076 
!                      E000089 = DERIVATIVE OF E000085 W.R.T. T
      E000089=-E000059 
!                      E000091 = DERIVATIVE OF E000086 W.R.T. T
      E000091=E000076 
      ENDIF !msec
      IF (FIRSTEM == 1) THEN !2
      DA(   1,1)=E000081
      DA(   2,1)=E000083
      DA(   3,1)=E000085
      DP(   1,1)=F000387
      DP(   2,1)=F000389
      DP(   3,1)=F000390
      DP(   4,1)=F000392
      DP(   5,1)=F000391
      DP(   6,1)=F000388
      DT(   1  )=E000084
      ENDIF !2
      IF (MSEC == 1) THEN
      DT(   2  )=E000087
      DT(   3  )=E000088
      ENDIF
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=6
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=2
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=0
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=8
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=23
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM10'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM11'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM13'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM15'; F_SIZES(23)=0
      NAME_FSIZES(24)='LIM16'; F_SIZES(24)=0
      NAME_FSIZES(25)='MAXRECID'; F_SIZES(25)=0
      NAME_FSIZES(26)='PC'; F_SIZES(26)=0
      NAME_FSIZES(27)='PCT'; F_SIZES(27)=1
      NAME_FSIZES(28)='PIR'; F_SIZES(28)=7
      NAME_FSIZES(29)='PD'; F_SIZES(29)=8
      NAME_FSIZES(30)='PAL'; F_SIZES(30)=0
      NAME_FSIZES(31)='MAXFCN'; F_SIZES(31)=0
      NAME_FSIZES(32)='MAXIC'; F_SIZES(32)=0
      NAME_FSIZES(33)='PG'; F_SIZES(33)=0
      NAME_FSIZES(34)='NPOPMIXMAX'; F_SIZES(34)=0
      NAME_FSIZES(35)='MAXOMEG'; F_SIZES(35)=1
      NAME_FSIZES(36)='MAXPTHETA'; F_SIZES(36)=7
      NAME_FSIZES(37)='MAXITER'; F_SIZES(37)=20
      NAME_FSIZES(38)='ISAMPLEMAX'; F_SIZES(38)=0
      NAME_FSIZES(39)='DIMTMP'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMCNS'; F_SIZES(40)=0
      NAME_FSIZES(41)='DIMNEW'; F_SIZES(41)=0
      NAME_FSIZES(42)='PDT'; F_SIZES(42)=1
      NAME_FSIZES(43)='LADD_MAX'; F_SIZES(43)=0
      NAME_FSIZES(44)='MAXSIDL'; F_SIZES(44)=0
      NAME_FSIZES(45)='NTT'; F_SIZES(45)=6
      NAME_FSIZES(46)='NOMEG'; F_SIZES(46)=1
      NAME_FSIZES(47)='NSIGM'; F_SIZES(47)=0
      NAME_FSIZES(48)='PPDT'; F_SIZES(48)=1
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE PRDATA, ONLY: MXSTEP=>MXSTP01
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L
      USE NMPRD_INT, ONLY: IQUIT
      USE NMBAYES_REAL, ONLY: LDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      REAL(KIND=DPSIZE) :: EVTREC
      SAVE
      INTEGER(KIND=ISIZE) :: FIRSTEM
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*)
      RETURN
      END
